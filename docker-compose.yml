version: "3.1"

services:
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: myUserPass
      MYSQL_USER: myUser
      MYSQL_PASSWORD: myUser
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./MySql:/docker-entrypoint-initdb.d/:ro

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8088:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: myUserPass

  # Backend
  testproject:
    container_name: backend
    build: ./
    volumes:
      - ./:/usr/src/testproject
    command: yarn dev
    working_dir: /usr/src/testproject
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    links:
      - mysql
# version: "3"
# services:
#   # PostgreSQL
#   # postgres:
#   #   container_name: postgres
#   #   build: ./postgres
#   #   environment:
#   #     POSTGRES_USER: admin
#   #     POSTGRES_PASSWORD: password
#   #     POSTGRES_URL: postgres://admin:password@localhost:5432/onlinecinema
#   #     POSTGRES_DB: onlinecinema
#   #     POSTGRES_HOST: postgres
#   #   # volumes:
#   #   #   - ./va:/var/lib/postgresql/data
#   #   ports:
#   #     - "5432:5432"

#   mysql:
#     image: mysql
#     command: --default-authentication-plugin=mysql_native_password
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: example
#       MYSQL_DATABASE: library
#     networks:
#       - mysql-compose-network
#     ports:
#       - "3306:3306"

#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8080:8080
#     links:
#       - mysql
#     environment:
#       DB_HOST: mysql
#     networks:
#       - mysql-compose-network

#   # Backend
#   testproject:
#     container_name: backend
#     build: ./
#     volumes:
#       - ./:/usr/src/testproject
#     command: yarn start
#     working_dir: /usr/src/testproject
#     ports:
#       - "3000:3000"
#     # environment:
#     #   POSTGRES_URI: postgres://admin:password@postgres:5432/onlinecinema
#     # links:
#     #   - postgres

# networks:
#   mysql-compose-network:
#     driver: bridge

